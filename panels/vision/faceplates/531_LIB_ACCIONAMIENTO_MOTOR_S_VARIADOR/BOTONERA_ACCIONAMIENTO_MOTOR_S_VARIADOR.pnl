V 14
6
LANG:10001 0 
LANG:10010 33 MOTOR_S_VARIADOR_BOTONERA_NO_INHA
LANG:10011 0 
LANG:10009 0 
LANG:10008 0 
LANG:10018 0 
PANEL,-1 -1 360 70 N "_Transparent" 1
"$INST"
E E E E E 1 -1 -1 0  37.23992207529346 3.499999999999993
""0  1
E "//--------------------------------------------------------------------------------
//Clases importadas a utilizar por las funciones de la librería
lib_accionamiento_motor_s_var accionamiento_motor_s_var = lib_accionamiento_motor_s_var($INST);
" 0
 4
"CBRef" "1"
"EClose" E
"dpi" "96"
"pdpi" "131.45"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
2
LANG:10001 0 
LANG:10010 0 
13 1
"btn_automatico"
""
1 39.31027661743707 2.499999999999993 E E E 1 E 1 E N "_Transparent" E N "_Transparent" E E
 E E
0 0 0 0 0 0
E E E
1
7
LANG:10001 0 
LANG:10010 0 
LANG:10011 0 
LANG:10009 0 
LANG:10008 0 
LANG:10018 0 
LANG:10005 0 

4
"hoverbclr" "N \"AZUL_01\""
"layoutAlignment" "AlignNone"
"focusPolicy" "StrongFocus"
"showFocus" "0"
7
LANG:10001 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10010 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10011 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10009 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10008 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10018 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10005 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
0  36.23992207529346 2.499999999999993 103.2399220752935 69.5

P 
4294967295
"pictures/iconos/faceplates/fp_automatico/auto_off.svg"
6
LANG:10001 0 
LANG:10010 0 
LANG:10011 0 
LANG:10009 0 
LANG:10008 0 
LANG:10018 0 
"main(mapping event)
{
  int val_ini, error;
  string descripcion, motivo, valor_ini, valor_fin;

  val_ini = accionamiento_motor_s_var.get_valor_xi_modo();

  if(val_ini == 10)  valor_ini = \"Manual\";
  else if(val_ini == 11)  valor_ini = \"Manual Local\";
  else if(val_ini == 12)  valor_ini = \"Manual Mantenimiento\";

  accionamiento_motor_s_var.set_automatico();  //Mediante la instacia de librería, cambiamos modo a automático (seteamos \"Input.Xi_MODO\" a 0)

  valor_fin = \"Automático\";

  descripcion = dpGetAlias($INST + \".\");
  motivo = \"Cambio en el modo de funcionamiento a \" + valor_fin + \": \" + descripcion;

  writeAuditEntry(accionamiento_motor_s_var.get_xi_modo(), valor_ini, valor_fin, error, motivo);
}
" 0
 E E "main()
{
   //Recogemos y analizamos la hoja de estilos utilizada, para cargar las imágenes correspondientes
   string textoEstilo = getApplicationProperty(\"styleSheet\");
   if(textoEstilo.contains(\"blackStyle{}\"))
   {
     this.fill(\"[pattern,[tile,any,C:/WinCC_OA_Proj_3_18/Scada_Libreria_DEUSER_3_18/pictures/iconos/faceplates/fp_automatico/auto_blanco_off.svg]]\");
   }

  if(!dpExists(accionamiento_motor_s_var.get_modo())){  //Comprobamos si no existe el DP y le añadimos atributos de color al componente.'accionamiento_motor_s_var' es la instancia creada para leer librerías
    setMultiValue(\"\", \"color\", \"LIB_IRC_MORADO_01\", \"\", \"foreCol\", \"LIB_IRC_MORADO_01\");
    return;
  }

  dpConnectUserData(\"cambiar_estado_btn_fp\", this.name(), accionamiento_motor_s_var.get_modo());  //Devuelve \"Input.Xi_MODO\"
}
//Cambia las características del objeto (botón) dependiendo del estado
void cambiar_estado_btn_fp(string nom_obj, string dp1, int estado){
  shape shape_objeto;
  string path_downpixmap, path_uppixmap;

  shape_objeto = getShape(nom_obj);  //Recuperamos el shape del objeto que se va a cambiar su estado
  path_downpixmap = shape_objeto.buttonDownPixmap();  //Recuperamos el buttonDownPixmap de relleno del objeto
  path_uppixmap = shape_objeto.buttonUpPixmap();  //Recuperamos el buttonUpPixmap de relleno del objeto

  if(path_downpixmap == \"\")  path_downpixmap = path_uppixmap;  //Si el path de la imagen del button DownPixmap está vacia se rellena con la del UpPixmap que debe estar rellena al colocar el button

  if(estado == 0){
    strreplace(path_downpixmap, \"_off\", \"_on\");  //Remplazamos la ruta de la imagen del button DownPixmap de OFF A ON
    strreplace(path_uppixmap, \"_off\", \"_on\");  //Remplazamos la ruta de la imagen del button UpPixmap de OFF A ON
  }else{
    strreplace(path_downpixmap, \"_on\", \"_off\");  //Remplazamos la ruta de la imagen del button DownPixmap de ON A OFF
    strreplace(path_uppixmap, \"_on\", \"_off\");  //Remplazamos la ruta de la imagen del button UpPixmap de ON A OFF
  }

  setValue(nom_obj, \"buttonType\", BT_PIXMAP,
                    \"buttonDownPixmap\", path_downpixmap,
                    \"buttonUpPixmap\", path_uppixmap);
}
" 0

13 2
"btn_manual"
""
1 109.2565282583459 3.500000000000004 E E E 1 E 1 E N "_Transparent" E N "_Transparent" E E
 E E
1 0 0 0 0 0
E E E
1
7
LANG:10001 0 
LANG:10010 0 
LANG:10011 0 
LANG:10009 0 
LANG:10008 0 
LANG:10018 0 
LANG:10005 0 

4
"hoverbclr" "N \"AZUL_01\""
"layoutAlignment" "AlignNone"
"focusPolicy" "StrongFocus"
"showFocus" "0"
7
LANG:10001 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10010 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10011 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10009 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10008 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10018 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10005 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
0  107.2565282583459 1.500000000000004 175.2304152249627 68.5

P 
4294967295
"pictures/iconos/faceplates/fp_manual/manual_off.svg"
6
LANG:10001 0 
LANG:10010 0 
LANG:10011 0 
LANG:10009 0 
LANG:10008 0 
LANG:10018 0 
"main(mapping event)
{
  int val_ini, error;
  string descripcion, motivo, valor_ini, valor_fin;

  /*Permisos de usuario - Operación. Devuelve un bool.
  Parametros obligatorios de la función:
    - Número de permiso que se comprobará. Desde 10 a 32. De 0 a 9 se usan para Wincc OA.
    - Comprobar permiso de forma individual (TRUE) o el número de permiso y los superiores (FALSE).
  Parametros opcionales de la función:
    - Mostrar mensaje - El usuario no tiene permisos. Por defecto (TRUE).
  */
  int n_permiso = 12;
  bool permiso = permisos_usuario_operacion(n_permiso, FALSE);

  if (permiso)
  {
    val_ini = accionamiento_motor_s_var.get_valor_xi_modo();

    if (val_ini == 0)  valor_ini = \"Automático\";
    else if (val_ini == 11)  valor_ini = \"Manual Local\";
    else if (val_ini == 12)  valor_ini = \"Manual Mantenimiento\";

    accionamiento_motor_s_var.set_manual_remoto();  //Mediante la instacia de librería, cambiamos modo a manual (seteamos \"Input.Xi_MODO\" a 10)

    valor_fin = \"Manual\";

    descripcion = dpGetAlias($INST + \".\");
    motivo = \"Cambio en el modo de funcionamiento a \" + valor_fin + \": \" + descripcion;

    writeAuditEntry(accionamiento_motor_s_var.get_xi_modo(), valor_ini, valor_fin, error, motivo);
  }
}
" 0
 E E "main()
{
   //Recogemos y analizamos la hoja de estilos utilizada, para cargar las imágenes correspondientes
   string textoEstilo = getApplicationProperty(\"styleSheet\");
   if(textoEstilo.contains(\"blackStyle{}\"))
   {
     this.fill(\"[pattern,[tile,any,C:/WinCC_OA_Proj_3_18/Scada_Libreria_DEUSER_3_18/pictures/iconos/faceplates/fp_manual/manual_blanco_off.svg]]\");
   }

  if(!dpExists(accionamiento_motor_s_var.get_modo())){ //Comprobamos si no existe el DP y le añadimos atributos de color al componente.'accionamiento_motor_s_var' es la instancia creada para leer librerías
    setMultiValue(\"\", \"color\", \"LIB_IRC_MORADO_01\", \"\", \"foreCol\", \"LIB_IRC_MORADO_01\");
    return;
  }

  dpConnectUserData(\"cambiar_estado_btn_fp\", this.name(), accionamiento_motor_s_var.get_modo());  //Devuelve \"Input.Xi_MODO\"
}
//Cambia las características del objeto (botón) dependiendo del estado
void cambiar_estado_btn_fp(string nom_obj, string dp1, int estado){
  shape shape_objeto;
  string path_downpixmap, path_uppixmap;

  shape_objeto = getShape(nom_obj);  //Recuperamos el shape del objeto que se va a cambiar su estado
  path_downpixmap = shape_objeto.buttonDownPixmap();  //Recuperamos el buttonDownPixmap de relleno del objeto
  path_uppixmap = shape_objeto.buttonUpPixmap();  //Recuperamos el buttonUpPixmap de relleno del objeto

  if(path_downpixmap == \"\")  path_downpixmap = path_uppixmap;  //Si el path de la imagen del button DownPixmap está vacia se rellena con la del UpPixmap que debe estar rellena al colocar el button

  if(estado==10){
    strreplace(path_downpixmap, \"_off\", \"_on\");  //Remplazamos la ruta de la imagen del button DownPixmap de OFF A ON
    strreplace(path_uppixmap, \"_off\", \"_on\");  //Remplazamos la ruta de la imagen del button UpPixmap de OFF A ON
  }else{
    strreplace(path_downpixmap, \"_on\", \"_off\");  //Remplazamos la ruta de la imagen del button DownPixmap de ON A OFF
    strreplace(path_uppixmap, \"_on\", \"_off\");  //Remplazamos la ruta de la imagen del button UpPixmap de ON A OFF
  }

  setValue(nom_obj, \"buttonType\", BT_PIXMAP,
                    \"buttonDownPixmap\", path_downpixmap,
                    \"buttonUpPixmap\", path_uppixmap);
}
" 0

13 3
"btn_manual_local"
""
1 180.8469785674571 1.500000000000004 E E E 1 E 1 E N "_Transparent" E N "_Transparent" E E
 E E
2 0 0 0 0 0
E E E
1
7
LANG:10001 0 
LANG:10010 0 
LANG:10011 0 
LANG:10009 0 
LANG:10008 0 
LANG:10018 0 
LANG:10005 0 

4
"hoverbclr" "N \"AZUL_01\""
"layoutAlignment" "AlignNone"
"focusPolicy" "StrongFocus"
"showFocus" "0"
7
LANG:10001 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10010 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10011 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10009 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10008 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10018 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10005 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
0  177.7600779247065 1.500000000000004 245.7339648913234 68.5

P 
4294967295
"pictures/iconos/faceplates/fp_manual/manual_local_off.svg"
6
LANG:10001 0 
LANG:10010 0 
LANG:10011 0 
LANG:10009 0 
LANG:10008 0 
LANG:10018 0 
"main(mapping event)
{
  int val_ini, error;
  string descripcion, motivo, valor_ini, valor_fin;
  /*Permisos de usuario - Operación. Devuelve un bool.
  Parametros obligatorios de la función:
    - Número de permiso que se comprobará. Desde 10 a 32. De 0 a 9 se usan para Wincc OA.
    - Comprobar permiso de forma individual (TRUE) o el número de permiso y los superiores (FALSE).
  Parametros opcionales de la función:
    - Mostrar mensaje - El usuario no tiene permisos. Por defecto (TRUE).
  */
  int n_permiso = 12;
  bool permiso = permisos_usuario_operacion(n_permiso, FALSE);

  if (permiso)
  {
    val_ini = accionamiento_motor_s_var.get_valor_xi_modo();

    if (val_ini == 0)  valor_ini = \"Automático\";
    else if (val_ini == 10)  valor_ini = \"Manual\";
    else if (val_ini == 12)  valor_ini = \"Manual Mantenimiento\";

    accionamiento_motor_s_var.set_manual_local();  //Mediante la instacia de librería,cambiamos modo a manual_local (Seteamos \"Input.Xi_MODO\" a 11)

    valor_fin = \"Manual Local\";

    descripcion = dpGetAlias($INST + \".\");
    motivo = \"Cambio en el modo de funcionamiento a \" + valor_fin + \": \" + descripcion;

    writeAuditEntry(accionamiento_motor_s_var.get_xi_modo(), valor_ini, valor_fin, error, motivo);
  }
}
" 0
 E E "main()
{
  //Recogemos y analizamos la hoja de estilos utilizada, para cargar las imágenes correspondientes
   string textoEstilo = getApplicationProperty(\"styleSheet\");
   if(textoEstilo.contains(\"blackStyle{}\"))
   {
     this.fill(\"[pattern,[tile,any,C:/WinCC_OA_Proj_3_18/Scada_Libreria_DEUSER_3_18/pictures/iconos/faceplates/fp_manual/manual_local_blanco_off.svg]]\");
   }

  if(!dpExists(accionamiento_motor_s_var.get_modo())){ //Comprobamos si no existe el DP y le añadimos atributos de color al componente.'accionamiento_motor_s_var' es la instancia creada para leer librerías
    setMultiValue(\"\", \"color\", \"LIB_IRC_MORADO_01\", \"\", \"foreCol\", \"LIB_IRC_MORADO_01\");
    return;
  }

  dpConnectUserData(\"cambiar_estado_btn_fp\", this.name(), accionamiento_motor_s_var.get_modo());  //Devuelve \"Input.Xi_MODO\"
}
//Cambia las características del objeto (botón) dependiendo del estado
void cambiar_estado_btn_fp(string nom_obj, string dp1, int estado){
  shape shape_objeto;
  string path_downpixmap, path_uppixmap;

  shape_objeto = getShape(nom_obj);  //Recuperamos el shape del objeto que se va a cambiar su estado
  path_downpixmap = shape_objeto.buttonDownPixmap();  //Recuperamos el buttonDownPixmap de relleno del objeto
  path_uppixmap = shape_objeto.buttonUpPixmap();  //Recuperamos el buttonUpPixmap de relleno del objeto

  if(path_downpixmap == \"\")  path_downpixmap = path_uppixmap;  //Si el path de la imagen del button DownPixmap está vacia se rellena con la del UpPixmap que debe estar rellena al colocar el button

  if(estado==11){
    strreplace(path_downpixmap, \"_off\", \"_on\");  //Remplazamos la ruta de la imagen del button DownPixmap de OFF A ON
    strreplace(path_uppixmap, \"_off\", \"_on\");  //Remplazamos la ruta de la imagen del button UpPixmap de OFF A ON
  }else{
    strreplace(path_downpixmap, \"_on\", \"_off\");  //Remplazamos la ruta de la imagen del button DownPixmap de ON A OFF
    strreplace(path_uppixmap, \"_on\", \"_off\");  //Remplazamos la ruta de la imagen del button UpPixmap de ON A OFF
  }

  setValue(nom_obj, \"buttonType\", BT_PIXMAP,
                    \"buttonDownPixmap\", path_downpixmap,
                    \"buttonUpPixmap\", path_uppixmap);
}
" 0

13 4
"btn_manual_mantenimiento"
""
1 251.7505710743758 3.500000000000004 E E E 1 E 1 E N "_Transparent" E N "_Transparent" E E
 E E
3 0 0 0 0 0
E E E
1
7
LANG:10001 0 
LANG:10010 0 
LANG:10011 0 
LANG:10009 0 
LANG:10008 0 
LANG:10018 0 
LANG:10005 0 

4
"hoverbclr" "N \"AZUL_01\""
"layoutAlignment" "AlignNone"
"focusPolicy" "StrongFocus"
"showFocus" "0"
7
LANG:10001 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10010 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10011 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10009 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10008 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10018 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
LANG:10005 35 MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0
0  249.7505710743758 1.500000000000004 316.7505710743758 68.5

P 
4294967295
"pictures/iconos/faceplates/fp_manual/manual_mantenimiento_off.svg"
6
LANG:10001 0 
LANG:10010 0 
LANG:10011 0 
LANG:10009 0 
LANG:10008 0 
LANG:10018 0 
"main(mapping event)
{
  int val_ini, error;
  string descripcion, motivo, valor_ini, valor_fin;

  /*Permisos de usuario - Operación. Devuelve un bool.
  Parametros obligatorios de la función:
    - Número de permiso que se comprobará. Desde 10 a 32. De 0 a 9 se usan para Wincc OA.
    - Comprobar permiso de forma individual (TRUE) o el número de permiso y los superiores (FALSE).
  Parametros opcionales de la función:
    - Mostrar mensaje - El usuario no tiene permisos. Por defecto (TRUE).
  */
  int n_permiso = 11;
  bool permiso = permisos_usuario_operacion(n_permiso, FALSE);

  if (permiso)
  {
    val_ini = accionamiento_motor_s_var.get_valor_xi_modo();

    if (val_ini == 0)  valor_ini = \"Automático\";
    else if (val_ini == 10)  valor_ini = \"Manual\";
    else if (val_ini == 11)  valor_ini = \"Manual Local\";

    accionamiento_motor_s_var.set_manual_mantenimiento();  //Mediante la instacia de librería, cambiamos modo a manual_mantenimiento (Seteamos \"Input.Xi_MODO\" a 12)

    valor_fin = \"Manual Mantenimiento\";

    descripcion = dpGetAlias($INST + \".\");
    motivo = \"Cambio en el modo de funcionamiento a \" + valor_fin + \": \" + descripcion;

    writeAuditEntry(accionamiento_motor_s_var.get_xi_modo(), valor_ini, valor_fin, error, motivo);
  }
}
" 0
 E E "main()
{
   //Recogemos y analizamos la hoja de estilos utilizada, para cargar las imágenes correspondientes
   string textoEstilo = getApplicationProperty(\"styleSheet\");
   if(textoEstilo.contains(\"blackStyle{}\"))
  {
    this.fill(\"[pattern,[tile,any,C:/WinCC_OA_Proj_3_18/Scada_Libreria_DEUSER_3_18/pictures/iconos/faceplates/fp_manual/manual_mantenimiento_blanco_off.svg]]\");
  }

  if(!dpExists(accionamiento_motor_s_var.get_modo())){ //Comprobamos si no existe el DP y le añadimos atributos de color al componente.'accionamiento_motor_s_var' es la instancia creada para leer librerías
    setMultiValue(\"\", \"color\", \"LIB_IRC_MORADO_01\", \"\", \"foreCol\", \"LIB_IRC_MORADO_01\");
    return;
  }

  dpConnectUserData(\"cambiar_estado_btn_fp\", this.name(), accionamiento_motor_s_var.get_modo());  //Devuelve \"Input.Xi_MODO\"
}
//Cambia las características del objeto (botón) dependiendo del estado
void cambiar_estado_btn_fp(string nom_obj, string dp1, int estado){
  shape shape_objeto;
  string path_downpixmap, path_uppixmap;

  shape_objeto = getShape(nom_obj);  //Recuperamos el shape del objeto que se va a cambiar su estado
  path_downpixmap = shape_objeto.buttonDownPixmap();  //Recuperamos el buttonDownPixmap de relleno del objeto
  path_uppixmap = shape_objeto.buttonUpPixmap();  //Recuperamos el buttonUpPixmap de relleno del objeto

  if(path_downpixmap == \"\")  path_downpixmap = path_uppixmap;  //Si el path de la imagen del button DownPixmap está vacia se rellena con la del UpPixmap que debe estar rellena al colocar el button

  if(estado==12){
    strreplace(path_downpixmap, \"_off\", \"_on\");  //Remplazamos la ruta de la imagen del button DownPixmap de OFF A ON
    strreplace(path_uppixmap, \"_off\", \"_on\");  //Remplazamos la ruta de la imagen del button UpPixmap de OFF A ON
  }else{
    strreplace(path_downpixmap, \"_on\", \"_off\");  //Remplazamos la ruta de la imagen del button DownPixmap de ON A OFF
    strreplace(path_uppixmap, \"_on\", \"_off\");  //Remplazamos la ruta de la imagen del button UpPixmap de ON A OFF
  }

  setValue(nom_obj, \"buttonType\", BT_PIXMAP,
                    \"buttonDownPixmap\", path_downpixmap,
                    \"buttonUpPixmap\", path_uppixmap);
}
" 0

0
LAYER, 1 
2
LANG:10001 0 
LANG:10010 0 
0
LAYER, 2 
2
LANG:10001 0 
LANG:10010 0 
0
LAYER, 3 
2
LANG:10001 0 
LANG:10010 0 
0
LAYER, 4 
2
LANG:10001 0 
LANG:10010 0 
0
LAYER, 5 
2
LANG:10001 0 
LANG:10010 0 
0
LAYER, 6 
2
LANG:10001 0 
LANG:10010 0 
0
LAYER, 7 
2
LANG:10001 0 
LANG:10010 0 
0
0
